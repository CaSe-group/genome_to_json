manifest {
    mainScript = 'main.nf'
    name = 'genome_to_json'
}

// default parameters
params {
    cores = Runtime.runtime.availableProcessors().intdiv(4)
    help = false
    max_cores = Runtime.runtime.availableProcessors()
    memory = '12'
    profile = false

    // inputs
    fasta = ''

    // settings
    busco_db = 'bacteria_odb10.2020-03-06.tar.gz'
    cloudProcess = false   
    new_entry = false
    split_fasta = false

    // tool-switches
    // do not use this style for other parameters as it is used for determination of active tools
    abricate_off = false
    busco_off = false
    eggnog_off = false
    prokka_off = false
    sourmash_off = false
    bakta_off = false

    // folder structure
    abricatedir = "1.abricate"
    baktadir = "2.bakta"
    buscodir = "4.busco"
    databases = "databases"
    eggnogdir = "5.eggnog"
    jsondir = "1.json-summaries"
    output = "results"
    prokkadir = "2.prokka"
    runinfodir = "X.Pipeline-runinfo"
    sourmashdir = "3.sourmash"

    //  databases
    bakta_db = false
    pgap_db = false
    pgap_v = "2022-10-03.build6384"

}


// runinfo
timeline {
  enabled = true
  file = "${params.output}/${params.runinfodir}/execution_timeline.html"
}

report {
  enabled = true
  file = "${params.output}/${params.runinfodir}/execution_report.html"
}


profiles {
    local {
        workDir = "work/nextflow-genometojson-$USER"
        includeConfig 'configs/local.config'
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.memory
        }

        process { errorStrategy = { task.exitStatus in [10,14,143,137,104,134,139] ? 'retry' : 'terminate' } }
    }


    docker {
        docker { 
            enabled = true
            fixOwnership = true
        }
        includeConfig 'configs/container.config'
    }

    stub {
        params {
            max_cores = 2
            cores = 2
        }
    }

    
    ukj_cloud { 
        workDir = "/tmp/nextflow-genometojson-$USER"
        docker { enabled = true }
        process {
            executor = 'google-lifesciences'
            // cloud error strategy
            errorStrategy = { task.exitStatus in [10,14,143,137,104,134,139] ? 'retry' : 'ignore' }
            maxRetries = 3
     }
        params {
            databases = 'gs://persistant-storage/genome_to_json'
        }

        bucketDir = 'gs://case-tmp-dir/genome-to-json/'
        google {  
            project = 'case-dev-302214'
            zone = 'europe-west1-b,europe-west1-c,europe-west2-b,europe-west2-a'
            lifeSciences.preemptible = true
            lifeSciences.bootDiskSize = 20.GB
            }
        includeConfig 'configs/container.config'
        includeConfig 'configs/nodes.config'

        }

// test_profile
    test_fasta {
    }
}

